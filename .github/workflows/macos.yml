name: MacOS
on: 
  push:
    paths:
      - '*.pro'
      - '**'
      - '.github/workflows/macos.yml'
  pull_request:
    paths:
      - '*.pro'
      - '**'
      - '.github/workflows/macos.yml' 
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        # qt_ver: [5.9.9,5.12.10,5.15.2]
        qt_ver: [5.15.2]
        qt_arch: [clang_64]
    env:
      targetName: QtiASL
      VERSION: Mac
      
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: ${{ matrix.qt_ver }}
          cached: 'false'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build macos
        run: |
          qmake
          make
          
      # 打包 拷贝依赖
      # macdeployqt bin/release/${targetName}.app -qmldir=. -verbose=1 -dmg
      - name: package
        run: |
          cp -r ExtBin/mac/. bin/release/${targetName}.app/Contents/MacOS/
          chmod +x bin/release/${targetName}.app/Contents/MacOS/iasl
          chmod +x bin/release/${targetName}.app/Contents/MacOS/patchmatic
          chmod +x bin/release/${targetName}.app/Contents/MacOS/patchmatic-legacy
          mkdir bin/release/${targetName}.app/Contents/Frameworks
          cp libqscintilla2_qt5.15.0.0.dylib bin/release/${targetName}.app/Contents/Frameworks/libqscintilla2_qt5.15.dylib
          rm -rf bin/release/${targetName}.app/Contents/PlugIns/bearer          
          macdeployqt bin/release/${targetName}.app -dmg
              
                    
      # 上传artifacts          
      - uses: actions/upload-artifact@v2
        with:
          #name: ${{ env.targetName }}_${{ matrix.os }}_${{matrix.qt_ver}} # .zip
          name: ${{ env.targetName }}_${{ VERSION }}
          path: bin/release/${{ env.targetName }}.dmg
          
          
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/release/${{ env.targetName }}.dmg
          
          #asset_name: ${{ env.targetName }}_${{ matrix.os }}_${{ matrix.qt_ver }}.dmg
          asset_name: ${{ env.targetName }}_${{ VERSION }}.dmg
          
          tag: ${{ github.ref }}
          overwrite: true
